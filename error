Traceback (most recent call last):
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain\_api\module_import.py", line 69, in import_by_name
    module = importlib.import_module(new_module)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.13_3.13.1008.0_x64__qbz5n2kfra8p0\Lib\importlib\__init__.py", line 88, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1310, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1324, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'langchain_community'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\vector_db.py", line 5, in <module>
    from langchain.vectorstores import FAISS
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain\vectorstores\__init__.py", line 186, in __getattr__
    return _import_attribute(name)
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain\_api\module_import.py", line 72, in import_by_name
    raise ModuleNotFoundError(
    ...<3 lines>...
    ) from e
ModuleNotFoundError: Module langchain_community.vectorstores not found. Please install langchain-community to access this module. You can install it using `pip install -U langchain-community`

ERROR:

>> from langchain.vectorstores import FAISS

with new imports of:

>> from langchain_community.vectorstores import FAISS
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.vectorstores import FAISS
C:\Users\HariharaM12\PycharmProjects\rag_proj\vector_db.py:6: LangChainDeprecationWarning: Importing AzureOpenAIEmbeddings from langchain.embeddings is deprecated. Please replace deprecated imports:

>> from langchain.embeddings import AzureOpenAIEmbeddings

with new imports of:

>> from langchain_community.embeddings import AzureOpenAIEmbeddings
You can use the langchain cli to **automatically** upgrade many imports. Please see documentation here <https://python.langchain.com/docs/versions/v0_2/>
  from langchain.embeddings import AzureOpenAIEmbeddings
C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain\chat_models\__init__.py:33: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import AzureChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  warnings.warn(
C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain\chat_models\__init__.py:33: LangChainDeprecationWarning: Importing chat models from langchain is deprecated. Importing from langchain will no longer be supported as of langchain==0.2.0. Please import from langchain-community instead:

`from langchain_community.chat_models import AzureChatOpenAI`.

To install langchain-community run `pip install -U langchain-community`.
  warnings.warn(
C:\Users\HariharaM12\PycharmProjects\rag_proj\vector_db.py:40: LangChainDeprecationWarning: The class `AzureOpenAIEmbeddings` was deprecated in LangChain 0.0.9 and will be removed in 1.0. An updated version of the class exists in the :class:`~langchain-openai package and should be used instead. To use it run `pip install -U :class:`~langchain-openai` and import as `from :class:`~langchain_openai import AzureOpenAIEmbeddings``.
  embedding_model = AzureOpenAIEmbeddings(
Traceback (most recent call last):
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\vector_db.py", line 40, in <module>
    embedding_model = AzureOpenAIEmbeddings(
        deployment=EMBEDDING_DEPLOYMENT,
    ...<3 lines>...
        openai_api_version=AZURE_OPENAI_API_VERSION
    )
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain_core\_api\deprecation.py", line 224, in warn_if_direct_instance
    return wrapped(self, *args, **kwargs)
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain_core\_api\deprecation.py", line 224, in warn_if_direct_instance
    return wrapped(self, *args, **kwargs)
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "C:\Users\HariharaM12\PycharmProjects\rag_proj\.venv\Lib\site-packages\langchain_community\embeddings\azure_openai.py", line 105, in validate_environment
    values["chunk_size"] = min(values["chunk_size"], 2048)
                               ~~~~~~^^^^^^^^^^^^^^
KeyError: 'chunk_size'
