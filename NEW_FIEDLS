C:\Users\HariharaM12\PycharmProjects\Task2\.venv\Scripts\python.exe C:\Users\HariharaM12\PycharmProjects\Task2\main.py 
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 126/126 [00:18<00:00,  6.89it/s]

üßæ Raw LLM output (Batch 1):
```json
[
  {
    "kappa_flc": "0.08 mg/dL",
    "lambda_flc": "<0.15 mg/dL",
    "kappa_lambda_ratio": ">0.57",
    "date_of_lab": "2024-06-25",
    "evidence_sentences": [
      "Result Value Ref Range    Kappa Free Light Chain 0.08 (L) 0.76 - 6.83 mg/dL    Lambda Free Light Chain <0.15 (L) 0.68 -...
‚ùå Failed batch 1: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 2):
```json
[
  {
    "kappa_flc": "56.21 mg/dL",
    "lambda_flc": "<3.08 mg/dL",
    "kappa_lambda_ratio": ">115.57",
    "date_of_lab": "2024-02-22",
    "evidence_sentences": [
      "Latest Reference Range & Units 02/22/24 09:20   Kappa Free Light Chain 0.76 - 6.83 mg/dL 56.21 (H)   Lambda Free Lig...
‚ùå Failed batch 2: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 3):
```json
[
  {
    "kappa_flc": "64.9 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": "190",
    "date_of_lab": "2019-03-XX",
    "evidence_sentences": [
      "Diagnoses in 3/2019. M-spike of 6,calcium of 9.7, an IgG of 5610,kappa FLC 64.9, kappa/lambda ratio of 190, total protein 10.7, UPE...
‚ùå Failed batch 3: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 4):
```json
[
  {
    "kappa_flc": "65 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": null,
    "date_of_lab": "2019-XX-XX",
    "evidence_sentences": ["in 2019 was 6 g/dL with kappa free light chains of 65 mg/L."],
    "source_document": "2024-03-11_00:00:00.000_H&P_91495"
  },
  {
    "kappa...
‚ùå Failed batch 4: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 5):
```json
[
  {
    "kappa_flc": "64.9 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": "190",
    "date_of_lab": "2019-03-XX",
    "evidence_sentences": [
      "Diagnoses in 3/2019. M-spike of 6, calcium of 9.7, an IgG of 5610, kappa FLC 64.9, kappa/lambda ratio of 190, total protein 10.7, U...
‚ùå Failed batch 5: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 6):
```json
[
  {
    "kappa_flc": "06 mg/dL",
    "lambda_flc": "<1 mg/dL",
    "kappa_lambda_ratio": null,
    "date_of_lab": "2024-04-08",
    "evidence_sentences": ["Multiple myeloma labs 4/8/24: KFLC 06mg /dL, LFLC <1.$OXWRUEAVWUJWJXBJ_YNWGNFAOZHYQMVHQIONGEXBMWUXLKGMW$$NUUVOZDGUYQIHKVQ_QVZDGLOVFIEP...
‚ùå Failed batch 6: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 7):
```json
[
  {
    "kappa_flc": "20.78 mg/L",
    "lambda_flc": "0.24 mg/L",
    "kappa_lambda_ratio": "86.58",
    "date_of_lab": "2021-12-27",
    "evidence_sentences": ["FLC of 20.78, lambda FLC of 0.24, kappa/lambda ratio of 86.58."],
    "source_document": "2021-12-27_00:00:00.000_Progress_Notes...
‚ùå Failed batch 7: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 8):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": ["MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 8: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 9):
```json
[
  {
    "kappa_flc": "65 mg/dL",
    "lambda_flc": null,
    "kappa_lambda_ratio": null,
    "date_of_lab": "2019-XX-XX",
    "evidence_sentences": ["M spike at initial diagnosis in 2019 was 6 g/dL with kappa free light chains of 65 mg/dL."],
    "source_document": "2024-03-11_00:00:00.000...
‚ùå Failed batch 9: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 10):
```json
[
  {
    "kappa_flc": "65 mg/dL",
    "lambda_flc": null,
    "kappa_lambda_ratio": null,
    "date_of_lab": "2019-XX-XX",
    "evidence_sentences": ["M spike at initial diagnosis in 2019 was 6 g/dL with kappa free light chains of 65 mg/dL."],
    "source_document": "2024-03-11_00:00:00.000...
‚ùå Failed batch 10: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 11):
```json
[
  {
    "kappa_flc": "64.9 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": "190",
    "date_of_lab": "2022-01-10",
    "evidence_sentences": ["an IgG of 5610,kappa FLC 64.9, kappa/lambda ratio of 190, total protein 10.7, UPEP was positiveby immunofixation,and bone marrow showed my...
‚ùå Failed batch 11: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 12):
```json
[
  {
    "kappa_flc": "64.9 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": "190",
    "date_of_lab": "2019-XX-XX",
    "evidence_sentences": ["Diagnosed in 3/2019.M-spike of 6,calcium of 9.7, an IgG of 5610,kappa FLC 64.9, kappa/lambda ratio of 190, total protein 10.7, UPEP was po...
‚ùå Failed batch 12: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 13):
```json
[
  {
    "kappa_flc": "16.18 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": "> 115.57",
    "date_of_lab": "2024-02-22",
    "evidence_sentences": ["MM labs (2/22): KFLC  16.18, LFLC < 0.15, ratio > 115.57."],
    "source_document": "2024-04-01_00:00:00.000_Progress_Notes...
‚ùå Failed batch 13: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 14):
```json
[
  {
    "kappa_flc": "64.9 mg/L",
    "lambda_flc": "0.34 mg/L",
    "kappa_lambda_ratio": "190",
    "date_of_lab": "2019-03-XX",
    "evidence_sentences": [
      "At diagnosis, he had a calcium of 9.7, an IgG of 5610, kappa lambda ratio of 190, total protein 10.7, albumin of 2.3.",
    ...
‚ùå Failed batch 14: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 15):
```json
[
  {
    "kappa_flc": "42.66 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": ">1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["Pre therapy 1/16/2024: Kappa free light chains to 42.66, ratio > 1733.29, 2 and spikes on SPEP = 2.8 IgG kappa, kappa monoclonal fre...
‚ùå Failed batch 15: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 16):
```json
[
  {
    "kappa_flc": "24.67",
    "lambda_flc": null,
    "kappa_lambda_ratio": "137.06",
    "date_of_lab": "2020-10-XX",
    "evidence_sentences": ["In 10/2020, kappa FLC was 24.67, kappa/lambda ratio was 137.06."],
    "source_document": "2021-12-15_00:00:00.000_Progress_Notes_91091"
  ...
‚ùå Failed batch 16: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 17):
```json
[
  {
    "kappa_flc": "65 mg/L",
    "lambda_flc": "0.34 mg/L",
    "kappa_lambda_ratio": "190",
    "date_of_lab": "XXXX-XX-XX",
    "evidence_sentences": ["Baseline free light chains (per notes): Kappa 65, Lambda 0.34, Kappa/Lambda 190"],
    "source_document": "2022-02-22_00:00:00.000_Pr...
‚ùå Failed batch 17: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 18):
```json
[
  {
    "kappa_flc": "1.45 mg/L",
    "lambda_flc": "0.73 mg/L",
    "kappa_lambda_ratio": "1.99",
    "date_of_lab": "2021-12-01",
    "evidence_sentences": ["His most recent labs on 12/1/21 show an M-spike of 0.2, kappa FLC 1.45, lambda FLC 0.73, and kappa/lambda ratio of 1.99."],
    "s...
‚ùå Failed batch 18: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 19):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": [
      "MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."
    ],
...
‚ùå Failed batch 19: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 20):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": ["MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 20: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 21):
```json
[
  {
    "kappa_flc": "1.24 mg/L",
    "lambda_flc": "0.72 mg/L",
    "kappa_lambda_ratio": "1.72",
    "date_of_lab": "2022-12-15",
    "evidence_sentences": ["12/15: SPEP IgG kappa M spike of 0.1, Kappa light chain 1.24, lambda light chain 0.72. Kappa/ lambda ratio 1.72, beta 2 microglobu...
‚ùå Failed batch 21: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 22):
```json
[
  {
    "kappa_flc": "42.66 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": "> 1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["Pre therapy 1/16/2024: Kappa free light chains to 42.66, ratio > 1733.29, 2 and spikes on SPEP = 2.8 IgG kappa, kappa monoclonal fr...
‚ùå Failed batch 22: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 23):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": "1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": [
      "MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."
    ],
 ...
‚ùå Failed batch 23: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 24):
```json
[]
```...
‚ùå Failed batch 24: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 25):
```json
[
  {
    "kappa_flc": "42.66 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": ">1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["Pre therapy 1/16/2024: Kappa free light chains to 42.66, ratio > 1733.29, 2 and spikes on SPEP = 2.8 IgG kappa, kappa monoclonal fre...
‚ùå Failed batch 25: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 26):
```json
[
  {
    "kappa_flc": "129.54 mg/dL",
    "lambda_flc": "15 mg/dL",
    "kappa_lambda_ratio": "914.29",
    "date_of_lab": "2023-11-28",
    "evidence_sentences": ["Multiple myeloma labs: 11/28/23: kappa free light chain (KFLC) 129.54mg /dL, lambda free light chain (LFLC) 15mg /dL, kappa/la...
‚ùå Failed batch 26: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 27):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": ["MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 27: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 28):
```json
[
  {
    "kappa_flc": "242 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["MM markers (1/16): KFLC 242, LFLC < 0.15, ratio >1733.29, M spike 2.8 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 28: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 29):
```json
[
  {
    "kappa_flc": "42.66 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": "> 1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["Pre therapy 1/16/2024: Kappa free light chains to 42.66, ratio > 1733.29, 2 and spikes on SPEP = 2.8 IgG kappa, kappa monoclonal fr...
‚ùå Failed batch 29: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 30):
```json
[
  {
    "kappa_flc": "242 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["MM markers (1/16): KFLC 242, LFLC < 0.15, ratio >1733.29, M spike 2.8 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 30: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 31):
```json
[
  {
    "kappa_flc": "65 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": null,
    "date_of_lab": "2019-XX-XX",
    "evidence_sentences": ["M spike at initial diagnosis in 2019 was 6 g/dL with kappa free light chains of 65 mg/dL."],
    "source_document": "2024-03-11_00:00:00.000_...
‚ùå Failed batch 31: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 32):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": ["MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 32: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 33):
```json
[
  {
    "kappa_flc": "242 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["repeat leukapheresis on 1/23  - MM markers (1/16): KFLC 242, LFLC < 0.15, ratio >1733.29, M spike 2.8 IgG kappa, Kappa free l...
‚ùå Failed batch 33: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 34):
```json
[]
```...
‚ùå Failed batch 34: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 35):
```json
[]
```...
‚ùå Failed batch 35: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 36):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": "1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": [
      "MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."
    ],
 ...
‚ùå Failed batch 36: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 37):
```json
[
  {
    "kappa_flc": "242 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1733.29",
    "date_of_lab": "2024-01-16",
    "evidence_sentences": ["MM markers (1/16): KFLC 242, LFLC < 0.15, ratio >1733.29, M spike 2.8 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 37: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 38):
```json
[]
```...
‚ùå Failed batch 38: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 39):
```json
[
  {
    "kappa_flc": "16.18 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": "> 115.57",
    "date_of_lab": "2024-02-22",
    "evidence_sentences": ["MM labs (2/22): KFLC 16.18, LFLC < 0.15, ratio > 115.57."],
    "source_document": "2024-03-24_00:00:00.000_Progress_Notes_...
‚ùå Failed batch 39: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 40):
```json
[
  {
    "kappa_flc": "42.6 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": null,
    "date_of_lab": "2024-XX-XX",
    "evidence_sentences": ["KFLC 42.6-->16.18"],
    "source_document": "2024-03-19_00:00:00.000_Progress_Notes_91529"
  },
  {
    "kappa_flc": "16.18 mg/L",
    "lam...
‚ùå Failed batch 40: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 41):
```json
[]
```...
‚ùå Failed batch 41: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 42):
```json
[]
```...
‚ùå Failed batch 42: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 43):
```json
[]
```...
‚ùå Failed batch 43: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 44):
```json
[]
```...
‚ùå Failed batch 44: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 45):
```json
[]
```...
‚ùå Failed batch 45: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 46):
```json
[]
```...
‚ùå Failed batch 46: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 47):
```json
[]
```...
‚ùå Failed batch 47: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 48):
```json
[]
```...
‚ùå Failed batch 48: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 49):
```json
[]
```...
‚ùå Failed batch 49: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 50):
```json
[]
```...
‚ùå Failed batch 50: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 51):
```json
[]
```...
‚ùå Failed batch 51: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 52):
```json
[
  {
    "kappa_flc": "16.18 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": "> 115.57",
    "date_of_lab": "2024-02-22",
    "evidence_sentences": ["Pre-CAR T evaluation: MM labs (2/22): KFLC 16.18, LFLC < 0.15, ratio > 115.57."],
    "source_document": "2024-03-10_00:00:...
‚ùå Failed batch 52: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 53):
```json
[]
```...
‚ùå Failed batch 53: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 54):
```json
[]
```...
‚ùå Failed batch 54: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 55):
```json
[
  {
    "kappa_flc": "20.78 mg/L",
    "lambda_flc": "0.24 mg/L",
    "kappa_lambda_ratio": "86.58",
    "date_of_lab": "2021-06-XX",
    "evidence_sentences": [
      "In 6/2021, he had kappa FLC of 20.78, lambda FLC of 0.24, kappa/lambda ratio of 86.58."
    ],
    "source_document": "20...
‚ùå Failed batch 55: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 56):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": ["MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 56: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 57):
```json
[]
```...
‚ùå Failed batch 57: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 58):
```json
[]
```...
‚ùå Failed batch 58: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 59):
```json
[]
```...
‚ùå Failed batch 59: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 60):
```json
[
  {
    "kappa_flc": "1.24 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": "1.72",
    "date_of_lab": "2022-12-15",
    "evidence_sentences": ["Labs 12/15 show M-spike 0.1, KFLC 1.24, K/L ratio 1.72."],
    "source_document": "2022-01-07_00:00:00.000_Progress_Notes_91124"
  }
]
``...
‚ùå Failed batch 60: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 61):
```json
[]
```...
‚ùå Failed batch 61: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 62):
```json
[]
```...
‚ùå Failed batch 62: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 63):
```json
[]
```...
‚ùå Failed batch 63: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 64):
```json
[]
```...
‚ùå Failed batch 64: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 65):
```json
[
  {
    "kappa_flc": "242 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": ">1733.29",
    "date_of_lab": "2023-01-16",
    "evidence_sentences": ["MM markers (1/16): KFLC 242, LFLC < 0.15, ratio >1733.29, M spike 2.8 IgG kappa, Kappa free light chain TSTQ."],
    "source_...
‚ùå Failed batch 65: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 66):
Based on the provided context, there are no explicit mentions of the lab results for Kappa free light chains, Lambda free light chains, or Kappa/Lambda ratio. Therefore, no lab results can be extracted. Here is the structured JSON list:

```json
[]
```...
‚ùå Failed batch 66: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 67):
```json
[]
```...
‚ùå Failed batch 67: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 68):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": "1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": ["MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG kappa, Kappa free light chain TSTQ."],
    "source_d...
‚ùå Failed batch 68: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 69):
```json
[]
```...
‚ùå Failed batch 69: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 70):
```json
[]
```...
‚ùå Failed batch 70: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 71):
```json
[]
```...
‚ùå Failed batch 71: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 72):
```json
[
  {
    "kappa_flc": "204 mg/L",
    "lambda_flc": "< 0.15 mg/L",
    "kappa_lambda_ratio": "1456.71",
    "date_of_lab": "2024-01-24",
    "evidence_sentences": ["MM markers (1/24): KFLC 204, LFLC < 0.15, ratio >1456.71, M spike 2.6 IgG"],
    "source_document": "2024-01-26_00:00:00.000_P...
‚ùå Failed batch 72: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 73):
```json
[
  {
    "kappa_flc": "65 mg/L",
    "lambda_flc": "0.34 mg/L",
    "kappa_lambda_ratio": "190",
    "date_of_lab": "2019-XX-XX",
    "evidence_sentences": ["baseline labs showing an IgG kappa monoclonal protein of 6 g/dL, with kappa light chain of 65, lambda of 0.34 and ratio of 190."],
  ...
‚ùå Failed batch 73: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 74):
```json
[]
```...
‚ùå Failed batch 74: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 75):
The provided clinical notes do not contain any explicit mentions of the lab results for Kappa free light chains, Lambda free light chains, or the Kappa/Lambda ratio. Therefore, no lab results can be extracted from the context. Here is the structured JSON list based on the given context:

```json
[]
...
‚ùå Failed batch 75: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 76):
```json
[]
```...
‚ùå Failed batch 76: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 77):
```json
[
  {
    "kappa_flc": "42.6 mg/L",
    "lambda_flc": null,
    "kappa_lambda_ratio": null,
    "date_of_lab": "2024-XX-XX",
    "evidence_sentences": ["Talequetamab C1 (1/24-2/16/24) with M spike 2.8-->1, KFLC 42.6-->16.18"],
    "source_document": "2024-03-20_00:00:00.000_Progress_Notes_91...
‚ùå Failed batch 77: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 78):
```json
[]
```...
‚ùå Failed batch 78: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 79):
```json
[]
```...
‚ùå Failed batch 79: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 80):
```json
[]
```...
‚ùå Failed batch 80: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 81):
```json
[]
```...
‚ùå Failed batch 81: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 82):
```json
[]
```...
‚ùå Failed batch 82: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 83):
```json
[]
```...
‚ùå Failed batch 83: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 84):
```json
[]
```...
‚ùå Failed batch 84: Expecting value: line 1 column 1 (char 0)

üßæ Raw LLM output (Batch 85):
```json
[]
```...
‚ùå Failed batch 85: Expecting value: line 1 column 1 (char 0)
‚ö†Ô∏è No data extracted.

Process finished with exit code 0















import os
import re
import json
import numpy as np
import pandas as pd
import configparser
from tqdm import tqdm
from concurrent.futures import ThreadPoolExecutor, as_completed
from langchain_core.documents import Document
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain_community.vectorstores import FAISS
from langchain_openai import AzureOpenAIEmbeddings, AzureChatOpenAI

# === Load config.ini ===
config = configparser.ConfigParser()
config.read("config.ini")

AZURE_OPENAI_API_KEY = config["azure_openai"]["api_key"]
AZURE_OPENAI_ENDPOINT = config["azure_openai"]["endpoint"]
AZURE_OPENAI_API_VERSION = config["azure_openai"]["api_version"]
EMBEDDING_DEPLOYMENT = config["embedding_models"]["text_embedding_3_large"]
EMBEDDING_MODEL = "text-embedding-3-large"
GPT_DEPLOYMENT = config["gpt_models"]["model_gpt4o"]

# === File paths ===
csv_path = "MEDICAL_DATAS.csv"
output_dir = "output/fields"
os.makedirs(output_dir, exist_ok=True)
output_path = os.path.join(output_dir, "kappa_lambda_51_results_updated.xlsx")

# === Helper functions ===
def batchify(lst, n):
    for i in range(0, len(lst), n):
        yield lst[i:i + n]

def parse_llm_json(raw_text: str) -> str:
    pattern = r"```(?:json)?\\s*(.*?)```"
    match = re.search(pattern, raw_text, flags=re.DOTALL)
    raw_text = match.group(1).strip() if match else raw_text.strip()
    if raw_text.startswith("json"):
        raw_text = raw_text[len("json"):].strip()
    try:
        parsed = json.loads(raw_text)
    except json.JSONDecodeError:
        fixed = raw_text.replace("'", '"')
        parsed = json.loads(fixed)
    return json.dumps(parsed)

def normalize_text(text):
    text = text.lower()
    text = re.sub(r'[^a-z0-9]', ' ', text)
    text = re.sub(r'\\s+', ' ', text).strip()
    return text

# === Load CSV and chunk ===
df = pd.read_csv(csv_path)
documents = [
    Document(page_content=row["text"], metadata={"source": row["title"]})
    for _, row in df.iterrows() if pd.notna(row["text"])
]

splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=250)
chunks = splitter.split_documents(documents)
chunk_batches = list(batchify(chunks, 20))

# === Embedding model setup ===
embedding_model = AzureOpenAIEmbeddings(
    deployment=EMBEDDING_DEPLOYMENT,
    model=EMBEDDING_MODEL,
    openai_api_key=AZURE_OPENAI_API_KEY,
    azure_endpoint=AZURE_OPENAI_ENDPOINT,
    openai_api_version=AZURE_OPENAI_API_VERSION,
    chunk_size=1000
)

# === Build FAISS index using LangChain ===
def build_faiss(batch):
    return FAISS.from_documents(batch, embedding_model)

sub_indexes = []
with ThreadPoolExecutor(max_workers=4) as executor:
    futures = {executor.submit(build_faiss, batch): batch for batch in chunk_batches}
    for future in tqdm(as_completed(futures), total=len(futures)):
        try:
            sub_indexes.append(future.result())
        except Exception as e:
            print(f"Batch failed: {e}")

main_index = sub_indexes[0]
for sub_index in sub_indexes[1:]:
    main_index.merge_from(sub_index)
main_index.save_local("faiss_index")

# === Similarity search ===
query = "Extract the patient's kappa free light chain (mg/L), lambda free light chain (mg/L), and kappa/lambda ratio, along with the lab date and evidence."
vectorstore = FAISS.load_local("faiss_index", embeddings=embedding_model, allow_dangerous_deserialization=True)
results = vectorstore.similarity_search(query, k=1000)

# === Filtered Chunks ===
filtered_chunks = []
for doc in results:
    norm = normalize_text(doc.page_content)
    if 'kappa' in norm or 'lambda' in norm or 'ratio' in norm:
        filtered_chunks.append((doc.metadata.get("source", "Unknown"), doc.page_content))

# === LLM Setup ===
llm = AzureChatOpenAI(
    deployment_name=GPT_DEPLOYMENT,
    model_name="gpt-4o",
    openai_api_key=AZURE_OPENAI_API_KEY,
    azure_endpoint=AZURE_OPENAI_ENDPOINT,
    openai_api_version=AZURE_OPENAI_API_VERSION,
    temperature=0
)

# === LLM Prompting in Batches ===
final_results = []
batches = list(batchify(filtered_chunks, 5))

for i, batch in enumerate(batches):
    json_context = [
        {"source": source, "content": doc}
        for source, doc in batch
    ]
    prompt = f"""
You are a medical information extraction assistant. Your task is to extract lab results from the provided clinical notes.

From the context below, extract the following values **only if they are explicitly mentioned**:
- Kappa free light chains (mg/L)
- Lambda free light chains (mg/L)
- Kappa/Lambda ratio
- Lab test date (YYYY-MM-DD format)
- Supporting evidence sentence
- The document title the sentence came from (you will be given that)

IMPORTANT:
- If the date is incomplete (e.g., only month and year), fill the missing parts with "XX".
- DO NOT guess or infer dates.
- Return structured JSON list. One object per lab result.
- Include "evidence_sentences" and "source_document".

[
  {{
    "kappa_flc": "<value with unit>",
    "lambda_flc": "<value with unit>",
    "kappa_lambda_ratio": "<numeric ratio>",
    "date_of_lab": "<YYYY-MM-DD or with XX>",
    "evidence_sentences": ["<sentence>"],
    "source_document": "<document title>"
  }}
]

--- CONTEXT START ---
{json.dumps(json_context, indent=2)}
--- CONTEXT END ---
"""
    try:
        response = llm.invoke(prompt)
        if not response.content.strip():
            print(f"‚ö†Ô∏è Empty response for batch {i + 1}")
            continue

        print(f"\nüßæ Raw LLM output (Batch {i+1}):\n{response.content[:300]}...")
        cleaned = parse_llm_json(response.content)
        extracted_items = json.loads(cleaned)
        for item, (source_title, _) in zip(extracted_items, batch):
            item["source_document"] = source_title
            final_results.append(item)
    except Exception as e:
        print(f"‚ùå Failed batch {i + 1}: {e}")
        continue

# === Save Output ===
df = pd.DataFrame(final_results)
if not df.empty:
    df["evidence_sentences"] = df["evidence_sentences"].apply(lambda x: "\n".join(x) if isinstance(x, list) else str(x))
    df = df.drop_duplicates()
    df = df[["source_document", "kappa_flc", "lambda_flc", "kappa_lambda_ratio", "date_of_lab", "evidence_sentences"]]
    df.to_excel(output_path, index=False)
    print(f"‚úÖ Extracted results saved to {output_path}")
else:
    print("‚ö†Ô∏è No data extracted.")
